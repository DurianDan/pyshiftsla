from datetime import date
from typing import Tuple, List
import holidays

from pysla.shift import Shift, SHIFT_STRING, COMPARE_TO_ANOTHER_SHIFT
from pysla.shiftrange import ShiftRange
from pysla.shifts_builder import ShiftsBuilder
from pysla.daily_shifts import DailyShift
from pysla.daterange import DateRange


left_shift_str = "10101110"
RIGHT_SHIFTS_TO_COMPARE_STR: Tuple[
    COMPARE_TO_ANOTHER_SHIFT, List[SHIFT_STRING]
] = [
    ["greater", ["01101000"]],
    ["smaller", ["11201200"]],
    ["start-connects-end", ["09101010"]],
    ["end-connects-start", ["11101200"]],
    ["equal", ["10101110"]],
    ["following", ["11001200"]],
    ["leading", ["10001100"]],
    ["contain", ["10201100", "10201110", "10101100"]],
    ["be-contained", ["10001130", "10001110", "10101130"]],
]

LEFT_SHIFT = Shift.fromstr(left_shift_str)
RIGHT_SHIFTS_TO_COMPARE: Tuple[COMPARE_TO_ANOTHER_SHIFT, List[Shift]] = [
    [compare_result, [Shift.fromstr(shiftstr) for shiftstr in shiftstrs]]
    for [compare_result, shiftstrs] in RIGHT_SHIFTS_TO_COMPARE_STR
]

TEST_US_HOLIDAYS = list(holidays.country_holidays("US", years=[2024]).keys())

DEFAULT_SHIFTS_BUILDER = ShiftsBuilder(
    days_off_ranges=[
        *TEST_US_HOLIDAYS,  # US holidays in 2024 generated by holidays library.
        DateRange.fromstr(
            "20240101-20240105", calendar_type="lunar"
        ),  # Lunar New Year
        date(2024, 3, 14),  # random custom day off
        date(2024, 4, 14),  # random custom day off
        date(2024, 3, 15),  # random custom day off
    ],
    special_shifts=ShiftRange(
        {
            date(2024, 4, 14): DailyShift(
                [
                    Shift.fromstr("01300510"),
                    Shift.fromstr("19302310"),
                ]
            )
        }
    ),
)
